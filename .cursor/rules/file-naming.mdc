---
description: 
globs: 
alwaysApply: true
---
# File Naming Rule

## Basic Principles

1. **Clarity**: Names should clearly reflect file content and purpose
2. **Consistency**: Same file types use consistent naming style
3. **Lowercase**: All file names use lowercase letters
4. **kebab-case**: Use hyphens for multi-word names

## File Type Conventions

### React Components
- Use **kebab-case** with `.tsx` extension
- Examples: `button.tsx`, `user-profile.tsx`, `nav-bar.tsx`

### Responsive Components
- **Breakpoint suffix**: `nav-bar-mobile.tsx`, `nav-bar-desktop.tsx`
- **Variant naming**: `card-vertical.tsx`, `card-horizontal.tsx`
- **Responsive prefix**: `responsive-layout.tsx`, `responsive-container.tsx`

### Utilities & Functions
- Use **kebab-case** with `.ts` extension
- Examples: `auth-utils.ts`, `format-date.ts`, `dify-config.ts`

### API Routes
- Use Next.js standard: `route.ts`
- NextAuth core: `app/api/auth/[...nextauth]/route.ts`
- Helper files: `utils.ts`, `validation.ts`

### Static Assets
- Use **kebab-case** with descriptive prefixes
- Examples: `logo-dark.svg`, `icon-user.png`, `bg-pattern.jpg`

### Type Definitions
- Main types: `types.ts`
- Domain-specific: `{domain}-types.ts`
- Examples: `api-types.ts`, `auth-types.ts`

### Configuration Files
- Descriptive names with `.config.ts` suffix or kebab-case
- Examples: `auth.config.ts`, `dify-config.ts`

### Test Files
- Match source file name with `.test.ts` or `.spec.ts` suffix
- Examples: `button.test.tsx`, `auth-utils.spec.ts`

## Directory Naming

- Use **kebab-case** for multi-word directories
- Use lowercase letters
- Examples: `user-settings/`, `api-utils/`, `auth-providers/`

## Next.js Special Files

- **Page components**: `page.tsx`
- **Layout components**: `layout.tsx`
- **Loading states**: `loading.tsx`
- **Error states**: `error.tsx`
- **API routes**: `route.ts`

## Dynamic Routes & Grouping

- **Dynamic segments**: `[id]`, `[user-id]`
- **Catch-all routes**: `[...slug]`
- **Route groups**: `(auth)`, `(dashboard)` (app directory only)

## Quick Reference

| File Type | Style | Example |
|---|---|---|
| React Component | kebab-case | `button.tsx`, `user-card.tsx` |
| Utility Function | kebab-case | `format-date.ts`, `auth-utils.ts` |
| API Route | Next.js/NextAuth | `route.ts`, `[...nextauth]/route.ts` |
| Static Asset | kebab-case | `logo-dark.svg`, `icon-home.png` |
| Type Definition | descriptive-types | `api-types.ts`, `user-types.ts` |
| Config File | descriptive-config | `dify-config.ts`, `auth.config.ts` |
| Test File | source+test/spec | `button.test.tsx`, `auth-utils.spec.ts` |

## Suggestions & Reminders

1. Prioritize file name clarity and specificity over brevity
2. Avoid using overly similar names within the same directory
3. File names should reflect their primary responsibilities, not overly generic ones
4. Regularly review file names as the project evolves to maintain consistency
